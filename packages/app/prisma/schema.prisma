generator client {
  provider      = "prisma-client-js"
  // rhel (Red Hat Enterprise Linux) is for Vercel deployments
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_DIRECT_URL")
}

model User {
  id          String   @id @db.Uuid
  username    String   @unique @db.VarChar(255)
  displayName String   @map("display_name") @db.VarChar(255)
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  followers Follow[] @relation("following")
  following Follow[] @relation("follower")
  events    Event[]

  @@map("users")
}

model Follow {
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  followerId  String   @map("follower_id") @db.Uuid
  follower    User     @relation("follower", fields: [followerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  followingId String   @map("following_id") @db.Uuid
  following   User     @relation("following", fields: [followingId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([followerId, followingId])
  @@index([followingId])
  @@map("follows")
}

model Event {
  id        BigInt   @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  date      DateTime @db.Timestamptz(6)
  duration  Int      @db.Integer // Prisma does not support `interval` type yet
  body      String   @db.VarChar(1024)
  authorId  String   @map("author_id") @db.Uuid
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("events")
  @@schema("public")
}
